---
import { Image } from "astro:assets"
import PostTags from "~/components/blog/Tags.astro";
import type { Post } from "~/types";
import { getPermalink } from "~/utils/permalinks";
import { findImage } from "~/utils/images";
import { getFormattedDate } from "~/utils/utils";
import {
  isBlogCategoryRouteEnabled,
  isBlogPostRouteEnabled,
} from "~/utils/blog";
export interface Props {
  post: Post;
}
const { post } = Astro.props;
const image = await findImage(post.image);
const link = isBlogPostRouteEnabled ? getPermalink(post.permalink, "post") : "";
---

<article
  class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${
    image ? "md:grid-cols-2" : ""
  }`}
>
  {
    image && (
      <a class="relative block group" href={link ?? "javascript:void(0)"}>
        <div class="relative h-0 pb-[56.25%] md:pb-[75%] md:h-64 lg:pb-[56.25%] overflow-hidden bg-zinc-800/60 rounded-md">
          {image && (
            <Image
              src={image}
              class="absolute inset-0 object-cover w-full h-full mb-6 rounded-md"
              sizes="(max-width: 900px) 400px, 900px"
              width={720}
              height={256}
              alt={post.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          )}
        </div>
      </a>
    )
  }
  <div class="mt-0">
    <header>
      
      <h2 class="text-gray-200 text-xl sm:text-2xl font-bold leading-tight mb-2">
        {
          link ? (
            <a
              class="hover:text-gray-50 transition ease-in duration-200"
              href={link}
            >
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
      </h2>
      <div class="mb-2">
        <span class="text-sm font-semibold text-gray-300/80">
          
          <time datetime={String(post.publishDate)}
            >{getFormattedDate(post.publishDate)}</time
          >
          {
            post.category &&
              (isBlogCategoryRouteEnabled ? (
                <>
                  •
                  <a
                    class="capitalize hover:underline"
                    href={getPermalink(post.category, "category")}
                  >
                    {post.category.replaceAll("-", " ")}
                  </a>
                </>
              ) : (
                <>
                  •
                  <span class="capitalize">
                    {post.category.replaceAll("-", " ")}
                  </span>
                </>
              ))
          }
          {post.readingTime && <> • {post.readingTime} min read</>}
        </span>
      </div>
    </header>

    {
      post.excerpt && (
        <p class="flex-grow text-gray-300 text-base">{post.excerpt}</p>
      )
    }
    <footer class="mt-5">
      <PostTags tags={post.tags} />
    </footer>
  </div>
</article>
