---
import { Icon } from "astro-icon";
import Logo from "~/components/Logo.astro";

import { getHomePermalink } from "~/utils/permalinks";

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
  target?: string;
}

interface ActionLink extends Link {
  class?: string;
}

interface MenuLink extends Link {
  links?: Array<Link>;
}

export interface Props {
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isFullWidth?: boolean;
  position?: string;
}

const {
  links = [],
  actions = [],
  isSticky = false,
  isFullWidth = false,
  position = "center",
} = Astro.props;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    "top-0 z-40 flex-none mx-auto w-full transition-[opacity] ease-in-out",
  ]}
  id="header"
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      "relative py-3 px-3 md:px-6 mx-auto w-full md:flex md:justify-between",
      {
        "max-w-7xl": !isFullWidth,
      },
    ]}
  >
    <div
      class:list={[{ "mr-auto": position === "right" }, "flex justify-between"]}
    >
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="flex items-center md:hidden"></div>
    </div>
    <nav
      class="nav items-center w-full md:w-auto hidden md:flex overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:mx-5"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-semibold"
      >
        {
          links.map(({ text, href, links, icon, target }) => (
            <li class={links?.length ? "dropdown" : ""}>
              {links?.length ? (
                <>
                  <button class="opacity-60 px-4 py-3 flex items-center hover:opacity-100 transition duration-200 ease-in-out">
                    {icon && <Icon name={icon} class="w-5 h-5 mr-1 mt-1" />}
                    {icon ? null : text}
                    <Icon
                      name="tabler:chevron-down"
                      class="w-3.5 h-3.5 ml-0.5 hidden md:inline"
                    />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md rounded md:absolute pl-4 md:pl-0 md:hidden font-semibold md:bg-page md:min-w-[200px] drop-shadow-xl">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class="first:rounded-t last:rounded-b py-2 px-5 block whitespace-no-wrap transition duration-150 ease-in-out"
                          href={href2}
                          target={target}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class="px-4 py-3 flex items-centers transition duration-150 ease-in-out"
                  href={href}
                  target={target}
                >
                  <div class="flex items-center">
                    {icon && <Icon name={icon} class="w-5 h-5 mr-1 mt-1" />}
                    {icon ? null : text}
                  </div>
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { "ml-auto": position === "left" },
        "hidden md:self-center flex md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 bottom-0 p-3 md:p-0",
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex">
          <!-- <Icon name="tabler:brand-github" class="w-6 h-6"/> -->
        </div>
        {
          actions?.length ? (
            <span class="ml-4">
              {actions.map(({ text, href, class: className }) => (
                <a
                  class:list={[
                    "ml-2 btn py-2.5 px-5.5 md:px-6 font-semibold shadow-none",
                    className,
                  ]}
                  href={href}
                >
                  <Fragment set:html={text} />
                </a>
              ))}
            </span>
          ) : (
            ""
          )
        }
      </div>
    </div>
  </div>
</header>
